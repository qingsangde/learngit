//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18063 版自动生成。
// 
#pragma warning disable 1591

namespace WebGIS.GlobalSessionService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GSSWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class GSSWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncSessionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOnlineCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GSSWebService() {
            this.Url = global::WebGIS.Properties.Settings.Default.WebGIS_GlobalSessionService_GSSWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event SyncSessionCompletedEventHandler SyncSessionCompleted;
        
        /// <remarks/>
        public event SyncSessionsCompletedEventHandler SyncSessionsCompleted;
        
        /// <remarks/>
        public event CloseSessionCompletedEventHandler CloseSessionCompleted;
        
        /// <remarks/>
        public event GetSessionCompletedEventHandler GetSessionCompleted;
        
        /// <remarks/>
        public event IsActiveCompletedEventHandler IsActiveCompleted;
        
        /// <remarks/>
        public event GetAllOnlineCountCompletedEventHandler GetAllOnlineCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetData(string value) {
            object[] results = this.Invoke("GetData", new object[] {
                        value});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string value) {
            this.GetDataAsync(value, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string value, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        value}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SyncSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SyncSession(SessionModel sm) {
            this.Invoke("SyncSession", new object[] {
                        sm});
        }
        
        /// <remarks/>
        public void SyncSessionAsync(SessionModel sm) {
            this.SyncSessionAsync(sm, null);
        }
        
        /// <remarks/>
        public void SyncSessionAsync(SessionModel sm, object userState) {
            if ((this.SyncSessionOperationCompleted == null)) {
                this.SyncSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncSessionOperationCompleted);
            }
            this.InvokeAsync("SyncSession", new object[] {
                        sm}, this.SyncSessionOperationCompleted, userState);
        }
        
        private void OnSyncSessionOperationCompleted(object arg) {
            if ((this.SyncSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SyncSessions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SyncSessions(SessionModel[] sms) {
            this.Invoke("SyncSessions", new object[] {
                        sms});
        }
        
        /// <remarks/>
        public void SyncSessionsAsync(SessionModel[] sms) {
            this.SyncSessionsAsync(sms, null);
        }
        
        /// <remarks/>
        public void SyncSessionsAsync(SessionModel[] sms, object userState) {
            if ((this.SyncSessionsOperationCompleted == null)) {
                this.SyncSessionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncSessionsOperationCompleted);
            }
            this.InvokeAsync("SyncSessions", new object[] {
                        sms}, this.SyncSessionsOperationCompleted, userState);
        }
        
        private void OnSyncSessionsOperationCompleted(object arg) {
            if ((this.SyncSessionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncSessionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloseSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseSession(string token, string webflag) {
            this.Invoke("CloseSession", new object[] {
                        token,
                        webflag});
        }
        
        /// <remarks/>
        public void CloseSessionAsync(string token, string webflag) {
            this.CloseSessionAsync(token, webflag, null);
        }
        
        /// <remarks/>
        public void CloseSessionAsync(string token, string webflag, object userState) {
            if ((this.CloseSessionOperationCompleted == null)) {
                this.CloseSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseSessionOperationCompleted);
            }
            this.InvokeAsync("CloseSession", new object[] {
                        token,
                        webflag}, this.CloseSessionOperationCompleted, userState);
        }
        
        private void OnCloseSessionOperationCompleted(object arg) {
            if ((this.CloseSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SessionModel GetSession(string token, string webflag) {
            object[] results = this.Invoke("GetSession", new object[] {
                        token,
                        webflag});
            return ((SessionModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionAsync(string token, string webflag) {
            this.GetSessionAsync(token, webflag, null);
        }
        
        /// <remarks/>
        public void GetSessionAsync(string token, string webflag, object userState) {
            if ((this.GetSessionOperationCompleted == null)) {
                this.GetSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionOperationCompleted);
            }
            this.InvokeAsync("GetSession", new object[] {
                        token,
                        webflag}, this.GetSessionOperationCompleted, userState);
        }
        
        private void OnGetSessionOperationCompleted(object arg) {
            if ((this.GetSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionCompleted(this, new GetSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsActive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsActive(string token, string webserverflag) {
            object[] results = this.Invoke("IsActive", new object[] {
                        token,
                        webserverflag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsActiveAsync(string token, string webserverflag) {
            this.IsActiveAsync(token, webserverflag, null);
        }
        
        /// <remarks/>
        public void IsActiveAsync(string token, string webserverflag, object userState) {
            if ((this.IsActiveOperationCompleted == null)) {
                this.IsActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsActiveOperationCompleted);
            }
            this.InvokeAsync("IsActive", new object[] {
                        token,
                        webserverflag}, this.IsActiveOperationCompleted, userState);
        }
        
        private void OnIsActiveOperationCompleted(object arg) {
            if ((this.IsActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsActiveCompleted(this, new IsActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllOnlineCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllOnlineCount() {
            object[] results = this.Invoke("GetAllOnlineCount", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOnlineCountAsync() {
            this.GetAllOnlineCountAsync(null);
        }
        
        /// <remarks/>
        public void GetAllOnlineCountAsync(object userState) {
            if ((this.GetAllOnlineCountOperationCompleted == null)) {
                this.GetAllOnlineCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOnlineCountOperationCompleted);
            }
            this.InvokeAsync("GetAllOnlineCount", new object[0], this.GetAllOnlineCountOperationCompleted, userState);
        }
        
        private void OnGetAllOnlineCountOperationCompleted(object arg) {
            if ((this.GetAllOnlineCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOnlineCountCompleted(this, new GetAllOnlineCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SessionModel {
        
        private string usernameField;
        
        private int uidField;
        
        private int[] ridField;
        
        private int groupField;
        
        private int[] aidsField;
        
        private string tokenField;
        
        private System.DateTime logintimeField;
        
        private System.DateTime lastoperField;
        
        private string lastopersidField;
        
        private System.Data.DataTable carsField;
        
        private string webserverflagField;
        
        private string sysflagField;
        
        private string userIPField;
        
        private bool onecaruserField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public int uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public int[] rid {
            get {
                return this.ridField;
            }
            set {
                this.ridField = value;
            }
        }
        
        /// <remarks/>
        public int group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public int[] aids {
            get {
                return this.aidsField;
            }
            set {
                this.aidsField = value;
            }
        }
        
        /// <remarks/>
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime logintime {
            get {
                return this.logintimeField;
            }
            set {
                this.logintimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastoper {
            get {
                return this.lastoperField;
            }
            set {
                this.lastoperField = value;
            }
        }
        
        /// <remarks/>
        public string lastopersid {
            get {
                return this.lastopersidField;
            }
            set {
                this.lastopersidField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable cars {
            get {
                return this.carsField;
            }
            set {
                this.carsField = value;
            }
        }
        
        /// <remarks/>
        public string webserverflag {
            get {
                return this.webserverflagField;
            }
            set {
                this.webserverflagField = value;
            }
        }
        
        /// <remarks/>
        public string sysflag {
            get {
                return this.sysflagField;
            }
            set {
                this.sysflagField = value;
            }
        }
        
        /// <remarks/>
        public string userIP {
            get {
                return this.userIPField;
            }
            set {
                this.userIPField = value;
            }
        }
        
        /// <remarks/>
        public bool onecaruser {
            get {
                return this.onecaruserField;
            }
            set {
                this.onecaruserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SyncSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SyncSessionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CloseSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSessionCompletedEventHandler(object sender, GetSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SessionModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SessionModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsActiveCompletedEventHandler(object sender, IsActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllOnlineCountCompletedEventHandler(object sender, GetAllOnlineCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOnlineCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOnlineCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591